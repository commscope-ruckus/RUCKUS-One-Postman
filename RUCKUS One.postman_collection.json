{
	"info": {
		"_postman_id": "4a651dad-f5c0-4558-bcbc-82d69efce467",
		"name": "RUCKUS One at GitHub",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32551365"
	},
	"item": [
		{
			"name": "get jwt",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set('baseUrl','https://api.ruckus.cloud');",
							"pm.collectionVariables.set('tenantId','your_tenant_id');"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set('jwt', jsonData.access_token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "your_client_id",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "your_client_secret",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/oauth2/token/{{tenantId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"oauth2",
						"token",
						"{{tenantId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get tenant details",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/tenants/self?deep=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"tenants",
						"self"
					],
					"query": [
						{
							"key": "deep",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get venues",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/venues",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues"
					]
				}
			},
			"response": []
		},
		{
			"name": "create venue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"venueId\", jsonData.response.id);",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Building 400\",\n    \"address\": {\n        \"city\": \"San Jose\",\n        \"country\": \"United States\",\n        \"timezone\": \"America/Los_Angeles\",\n        \"addressLine\": \"390 Java Dr\",\n        \"latitude\": 37.4112751,\n        \"longitude\": -122.0191908\n    },\n    \"description\": \"Building 400\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/venues",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues"
					]
				}
			},
			"response": []
		},
		{
			"name": "get status of asynchronous request",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/activities/{{requestId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"activities",
						"{{requestId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get venues",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/venues",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues"
					]
				}
			},
			"response": []
		},
		{
			"name": "add AP to venue",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"apSerialNumber\", \"522072003629\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"name\": \"R550\",\n        \"serialNumber\": \"{{apSerialNumber}}\",\n        \"venueId\": \"{{venueId}}\",\n        \"description\": \"This is my R550 in the office\",\n        \"tags\": [\n            \"Test\"\n        ]\n    }\n]"
				},
				"url": {
					"raw": "{{baseUrl}}/venues/aps",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues",
						"aps"
					]
				},
				"description": "Use this API command to add a list of new APs."
			},
			"response": []
		},
		{
			"name": "get APs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"apSerialNumber\", jsonData[0].serialNumber);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/venues/aps",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues",
						"aps"
					]
				},
				"description": "Use this API command to get the network list."
			},
			"response": []
		},
		{
			"name": "get AP details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/venues/aps/{{apSerialNumber}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues",
						"aps",
						"{{apSerialNumber}}"
					]
				},
				"description": "Use this API command to get the network list."
			},
			"response": []
		},
		{
			"name": "create network",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"ssid\", \"R1\");",
							"pm.collectionVariables.set(\"passphrase\", \"ruckus123!\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"networkId\", jsonData.response.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"wlan\": {\n        \"ssid\": \"{{ssid}}\",\n        \"advancedCustomization\": {\n            \"maxClientsOnWlanPerRadio\": 100,\n            \"enableBandBalancing\": true,\n            \"clientIsolation\": false,\n            \"clientIsolationOptions\": {\n                \"autoVrrp\": false\n            },\n            \"hideSsid\": false,\n            \"forceMobileDeviceDhcp\": false,\n            \"clientLoadBalancingEnable\": true,\n            \"directedThreshold\": 5,\n            \"enableNeighborReport\": true,\n            \"enableFastRoaming\": false,\n            \"mobilityDomainId\": 1,\n            \"radioCustomization\": {\n                \"rfBandUsage\": \"BOTH\",\n                \"bssMinimumPhyRate\": \"default\",\n                \"phyTypeConstraint\": \"OFDM\",\n                \"managementFrameMinimumPhyRate\": \"6\"\n            },\n            \"enableSyslog\": false,\n            \"clientInactivityTimeout\": 120,\n            \"accessControlEnable\": false,\n            \"respectiveAccessControl\": true,\n            \"vlanPool\": null,\n            \"applicationPolicyEnable\": false,\n            \"l2AclEnable\": false,\n            \"l3AclEnable\": false,\n            \"wifiCallingEnabled\": false,\n            \"wifiCallingIds\": [],\n            \"proxyARP\": false,\n            \"enableAirtimeDecongestion\": false,\n            \"enableJoinRSSIThreshold\": false,\n            \"joinRSSIThreshold\": -85,\n            \"enableTransientClientManagement\": false,\n            \"joinWaitTime\": 30,\n            \"joinExpireTime\": 300,\n            \"joinWaitThreshold\": 10,\n            \"enableOptimizedConnectivityExperience\": false,\n            \"broadcastProbeResponseDelay\": 15,\n            \"rssiAssociationRejectionThreshold\": -75,\n            \"enableAntiSpoofing\": false,\n            \"enableArpRequestRateLimit\": true,\n            \"arpRequestRateLimit\": 15,\n            \"enableDhcpRequestRateLimit\": true,\n            \"dhcpRequestRateLimit\": 15,\n            \"dnsProxyEnabled\": false\n        },\n        \"wlanSecurity\": \"WPA2Personal\",\n        \"macAddressAuthentication\": false,\n        \"vlanId\": 1,\n        \"enabled\": true,\n        \"macAuthMacFormat\": \"UpperDash\",\n        \"managementFrameProtection\": \"Disabled\",\n        \"passphrase\": \"{{passphrase}}\"\n    },\n    \"name\": \"{{ssid}}\",\n    \"type\": \"psk\",\n    \"description\": \"\",\n    \"venues\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/networks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks"
					]
				}
			},
			"response": []
		},
		{
			"name": "get networks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"networkId\", jsonData[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/networks",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks"
					]
				},
				"description": "Use this API command to get the network list."
			},
			"response": []
		},
		{
			"name": "get network details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}?deep=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}"
					],
					"query": [
						{
							"key": "deep",
							"value": "true"
						}
					]
				},
				"description": "Use this API command to get the network list."
			},
			"response": []
		},
		{
			"name": "create venue-network association",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"venueId\": \"{{venueId}}\",\n    \"dual5gEnabled\": true,\n    \"tripleBandEnabled\": false,\n    \"networkId\": \"{{networkId}}\",\n    \"allApGroupsRadio\": \"Both\",\n    \"allApGroupsRadioTypes\": [\n        \"2.4-GHz\",\n        \"5-GHz\"\n    ],\n    \"isAllApGroups\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/networkActivations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networkActivations"
					]
				},
				"description": "Use this API command to get venue-network association list"
			},
			"response": []
		},
		{
			"name": "get venue-network association",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"networkVenueId\", jsonData.data[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"venueId\": \"{{venueId}}\",\n    \"networkId\": \"{{networkId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/networkActivations/query",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networkActivations",
						"query"
					]
				},
				"description": "Use this API command to get venue-network association list"
			},
			"response": []
		},
		{
			"name": "change AP radio parameters at the venue level",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"radioParams24G\": {\n        \"allowedChannels\": [\n            \"1\",\n            \"6\",\n            \"11\"\n        ],\n        \"channelBandwidth\": \"AUTO\",\n        \"method\": \"BACKGROUND_SCANNING\",\n        \"changeInterval\": 33,\n        \"scanInterval\": 20,\n        \"txPower\": \"Auto\"\n    },\n    \"radioParams50G\": {\n        \"allowedIndoorChannels\": [\n            \"36\",\n            \"144\"\n        ],\n        \"allowedOutdoorChannels\": [\n            \"36\",\n            \"144\"\n        ],\n        \"channelBandwidth\": \"AUTO\",\n        \"method\": \"BACKGROUND_SCANNING\",\n        \"changeInterval\": 33,\n        \"scanInterval\": 20,\n        \"txPower\": \"Auto\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/venues/{{venueId}}/radioSettings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues",
						"{{venueId}}",
						"radioSettings"
					]
				}
			},
			"response": []
		},
		{
			"name": "change radio parameters in a single AP",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"enable24G\": true,\n    \"enable50G\": true,\n    \"enable6G\": false,\n    \"apRadioParams24G\": {\n        \"allowedChannels\": [\n            \"1\",\n            \"6\",\n            \"11\"\n        ],\n        \"channelBandwidth\": \"AUTO\",\n        \"method\": \"BACKGROUND_SCANNING\",\n        \"changeInterval\": 33,\n        \"txPower\": \"-3\",\n        \"manualChannel\": 0\n    },\n    \"apRadioParams50G\": {\n        \"allowedChannels\": [\n            \"149\",\n            \"153\",\n            \"157\",\n            \"161\",\n            \"165\"\n        ],\n        \"channelBandwidth\": \"20MHz\",\n        \"method\": \"BACKGROUND_SCANNING\",\n        \"changeInterval\": 33,\n        \"txPower\": \"-3\",\n        \"manualChannel\": 0\n    },\n    \"apRadioParamsDual5G\": null,\n    \"apRadioParams6G\": null,\n    \"useVenueSettings\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/venues/aps/{{apSerialNumber}}/radioSettings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues",
						"aps",
						"{{apSerialNumber}}",
						"radioSettings"
					]
				}
			},
			"response": []
		},
		{
			"name": "configure 802.11r and 802.11k",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"enableNeighborReport\", true);",
							"pm.collectionVariables.set(\"enableFastRoaming\", true);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"type\": \"psk\",\n    \"wlan\": {\n        \"wlanSecurity\": \"WPA2Personal\",\n        \"advancedCustomization\": {\n            \"userUplinkRateLimiting\": 0,\n            \"userDownlinkRateLimiting\": 0,\n            \"totalUplinkRateLimiting\": 0,\n            \"totalDownlinkRateLimiting\": 0,\n            \"maxClientsOnWlanPerRadio\": 100,\n            \"enableBandBalancing\": true,\n            \"clientIsolation\": false,\n            \"clientIsolationOptions\": {\n                \"autoVrrp\": false\n            },\n            \"hideSsid\": false,\n            \"forceMobileDeviceDhcp\": false,\n            \"clientLoadBalancingEnable\": true,\n            \"directedThreshold\": 5,\n            \"enableNeighborReport\": \"{{enableNeighborReport}}\",\n            \"enableFastRoaming\": \"{{enableFastRoaming}}\",\n            \"mobilityDomainId\": 1,\n            \"radioCustomization\": {\n                \"rfBandUsage\": \"BOTH\",\n                \"bssMinimumPhyRate\": \"default\",\n                \"phyTypeConstraint\": \"OFDM\",\n                \"managementFrameMinimumPhyRate\": \"6\"\n            },\n            \"enableSyslog\": false,\n            \"clientInactivityTimeout\": 120,\n            \"accessControlEnable\": false,\n            \"respectiveAccessControl\": true,\n            \"applicationPolicyEnable\": false,\n            \"l2AclEnable\": false,\n            \"l3AclEnable\": false,\n            \"wifiCallingEnabled\": false,\n            \"proxyARP\": false,\n            \"enableAirtimeDecongestion\": false,\n            \"enableJoinRSSIThreshold\": false,\n            \"joinRSSIThreshold\": -85,\n            \"enableTransientClientManagement\": false,\n            \"joinWaitTime\": 30,\n            \"joinExpireTime\": 300,\n            \"joinWaitThreshold\": 10,\n            \"enableOptimizedConnectivityExperience\": false,\n            \"broadcastProbeResponseDelay\": 15,\n            \"rssiAssociationRejectionThreshold\": -75,\n            \"enableAntiSpoofing\": false,\n            \"enableArpRequestRateLimit\": true,\n            \"arpRequestRateLimit\": 15,\n            \"enableDhcpRequestRateLimit\": true,\n            \"dhcpRequestRateLimit\": 15,\n            \"dnsProxyEnabled\": false\n        },\n        \"macAddressAuthentication\": false,\n        \"macAuthMacFormat\": \"UpperDash\",\n        \"managementFrameProtection\": \"Disabled\",\n        \"vlanId\": 1,\n        \"ssid\": \"{{ssid}}\",\n        \"enabled\": true,\n        \"passphrase\": \"ruckus123!\"\n    },\n    \"tenantId\": \"63beff64a799410987164fc99e02039b\",\n    \"venues\": [\n        {\n            \"venueId\": \"28e056b381784443827bb7d971b46583\",\n            \"tripleBandEnabled\": false,\n            \"networkId\": \"a12fdf30235844998efcd7b247a077df\",\n            \"allApGroupsRadio\": \"Both\",\n            \"allApGroupsRadioTypes\": [\n                \"2.4-GHz\",\n                \"5-GHz\"\n            ],\n            \"isAllApGroups\": true,\n            \"id\": \"fb97e625ac404dacaccb85486f57198c\"\n        }\n    ],\n    \"name\": \"{{ssid}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get clients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"clientMac\", jsonData[0].mac);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clients",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "get client details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/clients/{{clientMac}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clients",
						"{{clientMac}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get events",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"url\": \"/events/query\",\n    \"fields\": [\n        \"event_datetime\",\n        \"severity\",\n        \"entity_type\",\n        \"product\",\n        \"entity_id\",\n        \"message\",\n        \"dpName\",\n        \"apMac\",\n        \"clientMac\",\n        \"macAddress\",\n        \"apName\",\n        \"switchName\",\n        \"serialNumber\",\n        \"networkName\",\n        \"networkId\",\n        \"ssid\",\n        \"radio\",\n        \"raw_event\",\n        \"sourceType\",\n        \"adminName\",\n        \"clientName\",\n        \"userName\",\n        \"hostname\",\n        \"adminEmail\",\n        \"administratorEmail\",\n        \"venueName\",\n        \"venueId\",\n        \"apGroupId\",\n        \"apGroupName\",\n        \"floorPlanName\",\n        \"recipientName\",\n        \"transactionId\",\n        \"name\",\n        \"ipAddress\",\n        \"detailedDescription\",\n        \"Persona-ID\"\n    ],\n    \"detailLevel\": \"debug\",\n    \"page\": 1,\n    \"pageSize\": 30,\n    \"defaultPageSize\": 10,\n    \"total\": 0,\n    \"sortField\": \"event_datetime\",\n    \"sortOrder\": \"DESC\",\n    \"filters\": {\n        \"entity_type\": [\n            \"AP\",\n            \"SECURITY\",\n            \"CLIENT\",\n            \"SWITCH\",\n            \"NETWORK\",\n            \"EDGE\"\n        ],\n        \"fromTime\": \"2025-05-25T17:57:00Z\",\n        \"toTime\": \"2025-06-23T17:57:00Z\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/events/query",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"query"
					]
				}
			},
			"response": []
		},
		{
			"name": "add switch to venue",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"switchSerialNumber\", \"FEK3805Q01X\");",
							"pm.collectionVariables.set(\"name\", \"ICX7150-A\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"name\": \"{{name}}\",\n        \"id\": \"{{switchSerialNumber}}\",\n        \"description\": \"\",\n        \"venueId\": \"{{venueId}}\",\n        \"stackMembers\": [],\n        \"trustPorts\": [],\n        \"enableStack\": false,\n        \"jumboMode\": false,\n        \"igmpSnooping\": \"none\",\n        \"spanningTreePriority\": \"\",\n        \"initialVlanId\": \"\",\n        \"rearModule\": \"none\",\n        \"specifiedType\": \"AUTO\"\n    }\n]"
				},
				"url": {
					"raw": "{{baseUrl}}/switches",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"switches"
					]
				},
				"description": "Use this API command to add a list of new APs."
			},
			"response": []
		},
		{
			"name": "get switches",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"switchMac\", jsonData[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/switches",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"switches"
					]
				},
				"description": "Use this API command to add a list of new APs."
			},
			"response": []
		},
		{
			"name": "create ICX VLAN profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"VLANs 120 and 121\",\n    \"name\": \"vlan120-121\",\n    \"profileType\": \"Regular\",\n    \"venues\": [\n        \"{{venueId}}\"\n    ],\n    \"vlans\": [\n        {\n            \"rootBridgeFamilyId\": \"ICX7150\",\n            \"spanningTreePriority\": 0,\n            \"spanningTreeProtocol\": \"rstp\",\n            \"vlanId\": 120,\n            \"vlanName\": \"Test1\"\n        },\n                {\n            \"rootBridgeFamilyId\": \"ICX7150\",\n            \"spanningTreePriority\": 0,\n            \"spanningTreeProtocol\": \"rstp\",\n            \"vlanId\": 121,\n            \"vlanName\": \"Test2\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/switchProfiles",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"switchProfiles"
					]
				},
				"description": "Use this API command to get venue-network association list"
			},
			"response": []
		},
		{
			"name": "get ICX switch profiles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"vlanProfileId\", jsonData[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/switchProfiles",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"switchProfiles"
					]
				},
				"description": "Use this API command to get venue-network association list"
			},
			"response": []
		},
		{
			"name": "get ICX switch ports",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/switches/{{switchMac}}/portSettings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"switches",
						"{{switchMac}}",
						"portSettings"
					]
				},
				"description": "Use this API command to get venue-network association list"
			},
			"response": []
		},
		{
			"name": "get ICX switch port details",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"port\", \"1/1/8\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{port}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/switches/{{switchMac}}/portSettings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"switches",
						"{{switchMac}}",
						"portSettings"
					]
				},
				"description": "Use this API command to get venue-network association list"
			},
			"response": []
		},
		{
			"name": "get ICX switch VLANs",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/switches/{{switchMac}}/vlans",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"switches",
						"{{switchMac}}",
						"vlans"
					]
				},
				"description": "Use this API command to get venue-network association list"
			},
			"response": []
		},
		{
			"name": "change ICX switch port",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"switchId\": \"{{switchMac}}\",\n        \"port\": {\n            \"name\": \"OneOneEight\",\n            \"portEnable\": true,\n            \"poeEnable\": true,\n            \"poeClass\": \"ZERO\",\n            \"poePriority\": 3,\n            \"portProtected\": false,\n            \"lldpEnable\": true,\n            \"portSpeed\": \"AUTO\",\n            \"rstpAdminEdgePort\": false,\n            \"stpBpduGuard\": false,\n            \"stpRootGuard\": false,\n            \"voiceVlan\": null,\n            \"lldpQos\": [],\n            \"dhcpSnoopingTrust\": false,\n            \"ipsg\": false,\n            \"revert\": false,\n            \"ignoreFields\": \"untaggedVlan,taggedVlans\",\n            \"port\": \"1/1/8\",\n            \"ports\": [\n                \"1/1/8\"\n            ]\n        }\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/switches/portSettings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"switches",
						"portSettings"
					]
				},
				"description": "Use this API command to get venue-network association list"
			},
			"response": []
		},
		{
			"name": "delete venue-network association",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{networkVenueId}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/networkActivations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networkActivations"
					]
				},
				"description": "Use this API command to get venue-network association list"
			},
			"response": []
		},
		{
			"name": "delete network",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{networkId}}\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/networks/{{networkId}}?deep=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"networks",
						"{{networkId}}"
					],
					"query": [
						{
							"key": "deep",
							"value": "true"
						}
					]
				},
				"description": "Use this API command to get the network list."
			},
			"response": []
		},
		{
			"name": "delete AP",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{apSerialNumber}}\"\n]"
				},
				"url": {
					"raw": "{{baseUrl}}/venues/aps",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues",
						"aps"
					]
				},
				"description": "Use this API command to add a list of new APs."
			},
			"response": []
		},
		{
			"name": "delete venue",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"{{venueId}}\"\n]"
				},
				"url": {
					"raw": "{{baseUrl}}/venues",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"venues"
					]
				},
				"description": "Use this API command to add a list of new APs."
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "tenantId",
			"value": ""
		},
		{
			"key": "jwt",
			"value": ""
		},
		{
			"value": ""
		},
		{
			"key": "venueId",
			"value": ""
		},
		{
			"key": "requestId",
			"value": ""
		},
		{
			"key": "apSerialNumber",
			"value": ""
		},
		{
			"key": "ssid",
			"value": ""
		},
		{
			"key": "passphrase",
			"value": ""
		},
		{
			"key": "networkId",
			"value": ""
		},
		{
			"key": "networkVenueId",
			"value": ""
		},
		{
			"key": "enableNeighborReport",
			"value": ""
		},
		{
			"key": "enableFastRoaming",
			"value": ""
		},
		{
			"key": "clientMac",
			"value": ""
		},
		{
			"key": "switchSerialNumber",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "switchMac",
			"value": ""
		},
		{
			"key": "vlanProfileId",
			"value": ""
		},
		{
			"key": "port",
			"value": ""
		}
	]
}